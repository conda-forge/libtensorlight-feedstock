From 4f7ae0530e7ecc63a44cd5371279551045fd1da8 Mon Sep 17 00:00:00 2001
From: "Lori A. Burns" <lori.burns@gmail.com>
Date: Tue, 18 Jul 2023 10:55:27 -0400
Subject: [PATCH] add netlib blas remove tabs

---
 CMakeLists.txt     | 25 ++++++++++++++-----------
 build_libtensor.py |  4 +++-
 2 files changed, 17 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 66f7169e..c14bbf43 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -44,9 +44,9 @@ include(InspectStdlib)
 
 option(BLA_STATIC "Statically link to BLAS and LAPACK" OFF)
 if (UNIX AND NOT APPLE)
-	set(BLA_VENDOR "OpenBLAS" CACHE STRING "BLAS Vendor to use (see CMake documentation)")
+    set(BLA_VENDOR "OpenBLAS" CACHE STRING "BLAS Vendor to use (see CMake documentation)")
 elseif (APPLE)
-	set(BLA_VENDOR "Apple" CACHE STRING "BLAS Vendor to use (see CMake documentation)")
+    set(BLA_VENDOR "Apple" CACHE STRING "BLAS Vendor to use (see CMake documentation)")
 endif()
 find_package(BLAS REQUIRED)
 include_directories(cblas)
@@ -54,17 +54,20 @@ include_directories(cblas)
 if    (BLA_VENDOR STREQUAL "Apple")
 elseif(BLA_VENDOR STREQUAL "OpenBLAS")
 elseif(BLA_VENDOR STREQUAL "Intel10_64lp_seq" OR BLA_VENDOR STREQUAL "Intel10_64lp")
-	# Find the directory with mkl.h
-	list(GET BLAS_LIBRARIES 1 BLAS_LIB)
-	get_filename_component(BLAS_DIR ${BLAS_LIB} DIRECTORY)
-	find_file(MKLINCLUDE mkl.h HINTS "${BLAS_DIR}/../include" "${BLAS_DIR}/../../include")
-	get_filename_component(BLAS_INCLUDE_DIR ${MKLINCLUDE} DIRECTORY)
+    # Find the directory with mkl.h
+    list(GET BLAS_LIBRARIES 1 BLAS_LIB)
+    get_filename_component(BLAS_DIR ${BLAS_LIB} DIRECTORY)
+    find_file(MKLINCLUDE mkl.h HINTS "${BLAS_DIR}/../include" "${BLAS_DIR}/../../include")
+    get_filename_component(BLAS_INCLUDE_DIR ${MKLINCLUDE} DIRECTORY)
+elseif(BLA_VENDOR STREQUAL "Generic")
+    find_library(CBLAS_LIBRARY NAMES cblas)
 else()
-	# TODO If more blas vendors are supported do not forget to add them to
-	#      libtensor/linalg/BlasSequential.C and libtensor/CMakeLists.txt
-	message(WARNING "BLAS vendor ${BLA_VENDOR} has not been tested with libtensorlight")
+    # TODO If more blas vendors are supported do not forget to add them to
+    #      libtensor/linalg/BlasSequential.C and libtensor/CMakeLists.txt
+    message(WARNING "BLAS vendor ${BLA_VENDOR} has not been tested with libtensorlight")
 endif()
-set(BLAS_LAPACK_LIBRARIES ${BLAS_LIBRARIES})
+set(BLAS_LAPACK_LIBRARIES ${BLAS_LIBRARIES} ${CBLAS_LIBRARY})
+message("BLAS_LAPACK_LIBRARIES ${BLAS_LAPACK_LIBRARIES}")
 
 ##########################################################################
 # Libxm dependencies
diff --git a/build_libtensor.py b/build_libtensor.py
index 7ce16e58..c9b3fdbf 100755
--- a/build_libtensor.py
+++ b/build_libtensor.py
@@ -58,6 +58,8 @@ def configure(build_dir, source_dir, install_dir, build_type=None, features=[],
     if "mkl" in features:
         # Use sequential Intel MKL version
         args += ["-DBLA_VENDOR=Intel10_64lp_seq"]
+    if "netlib" in features:
+        args += ["-DBLA_VENDOR=Generic"]
 
     subprocess.check_call(args + [source_dir], cwd=build_dir)
 
@@ -127,7 +129,7 @@ def main():
                         help="The build type to configure.")
     parser.add_argument("--features", default=[],
                         nargs="+", help="Select optional features for build.",
-                        choices=["libxm", "mkl", "mpi"])
+                        choices=["libxm", "mkl", "mpi", "netlib"])
     parser.add_argument("--documentation", default=False, action="store_true",
                         help="Build documentation using doxygen.")
 
-- 
2.34.1

